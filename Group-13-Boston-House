{"paragraphs":[{"text":"%pyspark\nfrom pyspark.mllib.feature import StandardScaler, StandardScalerModel\nfrom pyspark.mllib.regression import LabeledPoint, LinearRegressionWithSGD, LinearRegressionModel\n\nhouses = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/boston_house.csv')\nheader = houses.first()\nheaderless_houses = houses.filter(lambda line: line != header)\nheaderless_houses = headerless_houses.map(lambda line: line.split(\",\"))\ndata_frame = headerless_houses.map(lambda line: Row(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12])).toDF()\nfeatures = data_frame.map(lambda row: row[0:])\nscaler = StandardScaler(withMean=True, withStd=True).fit(features)\nfeatures_transform = scaler.transform(features)\nlabel = headerless_houses.map(lambda row: row[13])\nlabeledDataPoints = label.zip(features_transform)\nlabeledDataPoints = labeledDataPoints.map(lambda row: LabeledPoint(row[0],[row[1]]))\nmodel = LinearRegressionWithSGD.train(labeledDataPoints, intercept=True)\n\ntest_raw_data = sc.textFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/verification.csv')\nheader = test_raw_data.first()\nheaderless_testdata = test_raw_data.filter(lambda line: line != header)\nheaderless_testdata = headerless_testdata.map(lambda line: line.split(\",\"))\ntestdata_df = headerless_testdata.map(lambda line: Row(line[0],line[1],line[2],line[3],line[4],line[5],line[6],line[7],line[8],line[9],line[10],line[11],line[12])).toDF()\ntestdata_features = testdata_df.map(lambda row: row[0:])\ntestdata_transform = scaler.transform(testdata_features)\nverify_predictions = model.predict(testdata_transform)\nverify_predictions.saveAsTextFile('hdfs://sandbox.hortonworks.com/tmp/boston-data/predicted_results')\n","dateUpdated":"2016-09-29T20:48:05+0000","config":{"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"editorMode":"ace/mode/scala","colWidth":12},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1475122059942_-2045526034","id":"20160924-230812_510294549","result":{"code":"SUCCESS","type":"TEXT","msg":"[17.421431247081873, 21.041183220138773, 20.464012215912089]\n"},"dateCreated":"2016-09-29T04:07:39+0000","dateStarted":"2016-09-29T20:46:53+0000","dateFinished":"2016-09-29T20:47:00+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:48","focus":true},{"dateUpdated":"2016-09-29T04:07:39+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1475122059942_-2045526034","id":"20160928-232531_686411022","dateCreated":"2016-09-29T04:07:39+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:49"}],"name":"Group-13-Boston-House","id":"2BZGAJNH6","angularObjects":{"2BW4S5NJ4:shared_process":[],"2BY1Y2HJG:shared_process":[],"2BVYH21ZJ:shared_process":[],"2BV6637D6:shared_process":[],"2BX5CPDSX:shared_process":[],"2BWHGGFZJ:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}